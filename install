#!/bin/bash

me=`basename $0`
dir=`dirname $0`

cd $dir

# load all the submodules in
git submodule update --init

install() {
  echo "==> Installing $1"
  stow -t ~ "$1"
}

rerun_if_changed() {
  if [ ! -d ~/.dotfiles ]; then
    mkdir ~/.dotfiles
  fi
  hash_file=~/.dotfiles/$(basename $1)
  if [ ! -f $1 ]; then
    echo "Failure. '$1' doesn't exist!"
    return 1
  fi
  old_hash=$(cat $hash_file 2>/dev/null | awk '{print $1}')
  new_hash=$(shasum -a 512 $1 2>/dev/null | awk '{print $1}')
  if [[ "$old_hash" == "$new_hash" ]]; then
    echo "Not changed: $1. Skipped: $2"
    return
  fi
  eval $2
  if [[ $? -ne 0 ]]; then
    echo "Update command failed: $1 -- $2"
    return
  fi
  echo $new_hash > $hash_file
}

# install Mac configs
if [[ "$(uname)" == "Darwin" ]]; then
  for pkg in {brew,}; do
    install "$pkg"
  done
  rerun_if_changed ~/Brewfile "cd ~ && brew bundle; cd -"
fi

# install Linux configs
if [[ "$(uname)" == "Linux" ]]; then
  rerun_if_changed apt/pkgs "cd apt && ./pkgs; cd -"
fi

for pkg in {config,ctags,tmux}; do
  install "$pkg"
done

if [[ ! -e ~/.deno ]]; then
  curl -fsSL https://deno.land/x/install/install.sh | sh
  echo 'export PATH=~/.deno/bin:$PATH' >> ~/.bash_aliases
else
  deno upgrade
fi

if [[ ! -e ~/.cargo ]]; then
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup-init.sh
  chmod +x rustup-init.sh
  ./rustup-init.sh -y
  echo 'export PATH=~/.cargo/bin:$PATH' >> ~/.bash_aliases
else
  rustup update
fi

# Resume previous directory
cd - > /dev/null

echo "*** Done! ***"

